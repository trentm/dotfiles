// Place your key bindings in this file to override the defaults
[
    // https://stackoverflow.com/questions/53599250/how-can-i-insert-a-snippet-on-a-new-line-with-vscode
    {
        "key": "cmd+k x",
        "when": "editorTextFocus && !editorHasSelection",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "editor.action.addSelectionToNextFindMatch",
                "editor.action.clipboardCopyAction",
                "editor.action.insertLineAfter",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "name": "xxx-word-under-cursor"
                    }
                }
            ]
        }
    },
    {
        "key": "cmd+k x",
        "when": "editorTextFocus && editorHasSelection",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "editor.action.clipboardCopyAction",
                "editor.action.insertLineAfter",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "name": "xxx-word-under-cursor"
                    }
                }
            ]
        }
    },
    {
        "key": "cmd+k v",
        "when": "editorTextFocus && !editorHasSelection",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "editor.action.addSelectionToNextFindMatch",
                "editor.action.clipboardCopyAction",
                "editor.action.insertLineAfter",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "name": "xxx-word-under-cursor-verbose"
                    }
                }
            ]
        }
    },
    {
        "key": "cmd+k v",
        "when": "editorTextFocus && editorHasSelection",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "editor.action.clipboardCopyAction",
                "editor.action.insertLineAfter",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "name": "xxx-word-under-cursor-verbose"
                    }
                }
            ]
        }
    },
    {
        "key": "ctrl+cmd+i",
        "command": "-workbench.action.chat.open",
        "when": "!chatSetupHidden"
    },
    {
        "key": "shift+cmd+i",
        "command": "-workbench.action.chat.openAgent",
        "when": "config.chat.agent.enabled && !chatSetupHidden"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.chat.stopListeningAndSubmit",
        "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat2.close",
        "when": "inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0' || inlineChatHasEditsAgent && inlineChatVisible && !chatEdits.hasEditorModifications && !chatEdits.isRequestInProgress && chatEdits.requestCount == '0'"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
    },
    {
        "key": "cmd+k i",
        "command": "-inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.terminal.chat.start",
        "when": "chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || chatIsEnabled && terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat2.reveal",
        "when": "inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1"
    },
    {
        "key": "cmd+i",
        "command": "-search.action.searchWithAI",
        "when": "hasAIResultProviderKey && searchViewletFocus"
    }
]
