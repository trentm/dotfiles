#!/bin/bash
#
# Convenience wrapper for calling elasticsearch on localhost:
# https://www.elastic.co/guide/en/elasticsearch/reference/current/rest-apis.html
#
# Usage:
#   es /_cluster/nodes/_local
#
# Environment:
#   - ES_URL - Set to the Elasticsearch endpoint. Defaults to
#     "http://localhost:9200"
#   - ES_AUTH - Set to "<username>:<password>" to use Basic auth for requests.
#
# TODO: ES_KEY or ES_API_KEY support to set auth header appropriately.

if [ "$TRACE" != "" ]; then
    export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail


# Arguments.
verbose=0
if [ "$1" == "-v" ]; then
    shift
    verbose=1
fi
path=$1
if [[ -z "$path" ]]; then
    echo "error: no PATH argument given"
    echo ""
    echo "Usage:"
    echo "  es [-v] PATH [EXTRA-CURL-ARGS]"
    echo ""
    echo "Environment Variables:"
    echo "  ES_URL      Base URL for elasticsearch server. Default: http://localhost:9200."
    echo "  ES_AUTH     Set Basic Auth (curl '-u ...' arg)."
    echo "  ES_API_KEY  Set an API Key. Will be set via '-H \"Authorization: ApiKey \$ES_API_KEY\"'."
    exit 1
fi
shift;
JSON=$(which json 2>/dev/null || true)


if [[ -z "$ES_URL" ]]; then
    ES_URL=http://localhost:9200
fi

curl_args=( -sS )
if [[ -n "$ES_AUTH" ]]; then
    curl_args[${#curl_args[*]}]="-u"
    curl_args[${#curl_args[*]}]="$ES_AUTH"
fi
if [[ -n "$ES_API_KEY" ]]; then
    curl_args[${#curl_args[*]}]="-H"
    curl_args[${#curl_args[*]}]="Authorization: ApiKey $ES_API_KEY"
fi

# Note: the 'echo' doesn't show the real quoting of args.
[ "$verbose" == "1" ] && echo "# curl ${curl_args[@]} --url $ES_URL$path $@" >&2
if [[ ! -x "$JSON" ]]; then
    curl "${curl_args[@]}" --url "$ES_URL$path" "$@"
    echo ""
else
    curl "${curl_args[@]}" --url "$ES_URL$path" "$@" | json -q
fi
